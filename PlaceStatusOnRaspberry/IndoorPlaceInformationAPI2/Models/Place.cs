// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace PlaceStatusOnRaspberry.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class Place
    {
        /// <summary>
        /// Initializes a new instance of the Place class.
        /// </summary>
        public Place() { }

        /// <summary>
        /// Initializes a new instance of the Place class.
        /// </summary>
        public Place(Guid? placeId = default(Guid?), string name = default(string), long? totalPeopleInside = default(long?), int? capacity = default(int?), DateTime? lastService = default(DateTime?), int? typeId = default(int?), IList<Entrance> entrance = default(IList<Entrance>), Type type = default(Type))
        {
            PlaceId = placeId;
            Name = name;
            TotalPeopleInside = totalPeopleInside;
            Capacity = capacity;
            LastService = lastService;
            TypeId = typeId;
            Entrance = entrance;
            Type = type;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PlaceId")]
        public Guid? PlaceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalPeopleInside")]
        public long? TotalPeopleInside { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Capacity")]
        public int? Capacity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "LastService")]
        public DateTime? LastService { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TypeId")]
        public int? TypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Entrance")]
        public IList<Entrance> Entrance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Type")]
        public Type Type { get; set; }

    }
}
